import java.time.Instant
import java.time.format.DateTimeFormatter
import java.time.temporal.ChronoUnit

buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "4.0.0"
group = 'cn.mcmod'
archivesBaseName = 'IsometricViewExporter-1.15'

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
    options.encoding = 'UTF-8'
}

minecraft {
    mappings channel: 'snapshot', version: '20200513-1.15.1'

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'info'
            mods {
                isometric {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'info'
            mods {
                isometric {
                    source sourceSets.main
                }
            }
        }
        // We don't have any data to generate. So we drop the runData config.
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.15.2-31.2.4'
}

jar {
    manifest {
        attributes([
            "Specification-Title": "ItemRender",
            "Specification-Vendor": "Kobata, Jerrell Fang et al.",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": "Isometric View Exporter",
            "Implementation-Version": "${version}",
            "Implementation-Vendor": "3TUSK",
            "Implementation-Timestamp": DateTimeFormatter.ISO_INSTANT.format(Instant.now().truncatedTo(ChronoUnit.SECONDS))
        ])
    }
}

// Publish toâ€¦ somewhere
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        release(MavenPublication) {
            artifact reobfArtifact
            pom {
                name = 'Isometric View Exporter for Minecraft 1.15'
                description = 'A fork of ItemRender with fixes and features.'
                url = 'https://github.com/3TUSK/IsometricViewExporter'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://github.com/3TUSK/IsometricViewExporter/blob/mc1.15-forge/LICENSE'
                    }
                    license {
                        name = 'Unlicense'
                        url = 'https://unlicense.org/'
                        comments = 'Only applicable to package info.tritusk.isometric'
                    }
                }
                developers {
                    developer {
                        id = '3TUSK'
                        name = '3TUSK'
                    }
                }
                issueManagement {
                    system = 'GitHub Issues'
                    url = 'https://github.com/3TUSK/IsometricViewExporter/issues'
                }
                scm {
                    url = 'https://github.com/3TUSK/IsometricViewExporter'
                    connection = 'scm:git:git://github.com/3TUSK/IsometricViewExporter.git'
                    developerConnection = 'scm:git:git@github.com:3TUSK/IsometricViewExporter.git'
                }
            }
        }
    }
    repositories {
        maven {
            name = "archive"
            url = "https://maven.hub.tritusk.info/releases/"
            credentials {
                username = System.env.MAVEN_USERNAME
                password = System.env.MAVEN_PASSWORD
            }
        }
    }
}

tasks.withType(PublishToMavenRepository) {
    onlyIf {
        System.env.MAVEN_USERNAME && System.env.MAVEN_PASSWORD
    }
}

task("githubActionOutput") {
    onlyIf {
        System.env.GITHUB_ACTIONS
    }
    doLast {
        println "::set-output nane=artifact_path::$buildDir/reobfJar/output.jar"
        println "::set-output name=artifach_name::$archivesBaseName-${version}.jar"
    }
}
