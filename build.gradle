import java.time.Instant
import java.time.format.DateTimeFormatter
import java.time.temporal.ChronoUnit

buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "4.0"
group = 'cn.mcmod'
archivesBaseName = 'IsometricViewExporter'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

compileJava.options.encoding = 'UTF-8'

minecraft {
    mappings channel: 'snapshot', version: '20200513-1.15.1'

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'info'
            mods {
                isometric {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'info'
            mods {
                isometric {
                    source sourceSets.main
                }
            }
        }
        // We don't have any data to generate. So we drop the runData config.
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.15.2-31.2.4'
}

jar {
    manifest {
        attributes([
            "Specification-Title": "ItemRender",
            "Specification-Vendor": "Kobata, Jerrell Fang et al.",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": "Isometric View Exporter",
            "Implementation-Version": "${version}",
            "Implementation-Vendor": "3TUSK",
            "Implementation-Timestamp": DateTimeFormatter.ISO_INSTANT.format(Instant.now().truncatedTo(ChronoUnit.SECONDS))
        ])
    }
}

// Publish toâ€¦ somewhere
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
